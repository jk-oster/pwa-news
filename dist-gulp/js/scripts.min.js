const apiKey="505743fe8c214f2287dca0c6e2cc7703",main=document.querySelector("main"),srcSel=document.querySelector("#srcSel"),defaultSrc="the-washington-post";let articleId=0;async function updateSources(){const e=await fetch("https://newsapi.org/v2/sources?apiKey="+apiKey),t=await e.json();srcSel.innerHTML=t.sources.map(e=>`<option value="${e.id}">${e.name}</option>`).join("\n")}async function updateNews(e=defaultSrc){main.innerHTML="";const t=await fetch(`https://newsapi.org/v2/top-headlines?sources=${e}&sortBy=top&apiKey=`+apiKey),s=await t.json();main.innerHTML=s.articles.map(createArticle).join("\n")}function createArticle(e){return`
    <div class="article" id="${articleId++}">
      <a href="${e.url}">
        ${e.urlToImage?articleImg(e):""}
        <div>
            <h2>${e.title}</h2>
            <p>${e.description}</p>
        </div>
      </a>
    </div>
  `}function articleImg(e){return`<img src="${e.urlToImage}" alt="${e.title}">`}window.addEventListener("load",async()=>{if(updateNews(),await updateSources(),srcSel.value=defaultSrc,srcSel.addEventListener("change",e=>{updateNews(e.target.value)}),"serviceWorker"in navigator)try{await navigator.serviceWorker.register("sw.js"),console.log("serviceWorker registered")}catch(e){console.log("serviceWorker reg failed",e)}});const gulp=require("gulp"),concat=require("gulp-concat"),cleanCSS=require("gulp-clean-css"),uglify=require("gulp-uglify"),imagemin=require("gulp-imagemin");function css(){return gulp.src(["style.css"]).pipe(concat("styles.css")).pipe(gulp.dest("dist-gulp/css")).pipe(concat("styles.min.css")).pipe(cleanCSS()).pipe(gulp.dest("dist-gulp/css"))}function js(){return gulp.src("*.js").pipe(concat("scripts.min.js")).pipe(uglify()).pipe(gulp.dest("dist-gulp/js"))}function img(){return gulp.src("images/*").pipe(imagemin([imagemin.mozjpeg({optimizationLevel:5})])).pipe(gulp.dest("images/dist-gulp/"))}exports.default=gulp.parallel(gulp.series(css),js,img);const staticAssets=["./","./style.css","./app.js","./fallback.json","./images/fetch-dog.jpg"];async function cacheFirst(e){return await caches.match(e)||fetch(e)}async function networkFirst(t){const s=await caches.open("news-dynamic");try{console.log("fetching network response");const e=await fetch(t);return await s.put(t,e.clone()),e}catch(e){return console.log("using fallback network response",e),await s.match(t)||caches.match("./fallback.json")}}self.addEventListener("install",async e=>{console.log("install",e),await caches.open("news-static").then(e=>{e.addAll(staticAssets)})}),self.addEventListener("activate",e=>{e.waitUntil(self.clients.claim())}),self.addEventListener("fetch",e=>{console.log("fetch successfully intercepted",e);var t=e.request;new URL(t.url).origin===location.origin?e.respondWith(cacheFirst(t)):e.respondWith(networkFirst(t))});